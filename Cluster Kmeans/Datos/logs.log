2023-03-09 15:36:09,308:INFO:PyCaret ClusteringExperiment
2023-03-09 15:36:09,308:INFO:Logging name: cluster-default-name
2023-03-09 15:36:09,308:INFO:ML Usecase: MLUsecase.CLUSTERING
2023-03-09 15:36:09,308:INFO:version 3.0.0.rc6
2023-03-09 15:36:09,308:INFO:Initializing setup()
2023-03-09 15:36:09,308:INFO:self.USI: 90fa
2023-03-09 15:36:09,308:INFO:self._variable_keys: {'idx', 'USI', 'n_jobs_param', 'exp_name_log', 'X', 'exp_id', 'seed', 'log_plots_param', 'data', 'gpu_param', 'gpu_n_jobs_param', '_ml_usecase', '_available_plots', 'logging_param', 'memory', 'pipeline', 'html_param'}
2023-03-09 15:36:09,308:INFO:Checking environment
2023-03-09 15:36:09,309:INFO:python_version: 3.10.9
2023-03-09 15:36:09,309:INFO:python_build: ('main', 'Jan 11 2023 15:15:40')
2023-03-09 15:36:09,309:INFO:machine: AMD64
2023-03-09 15:36:09,309:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-09 15:36:09,315:INFO:Memory: svmem(total=16893386752, available=2694680576, percent=84.0, used=14198706176, free=2694680576)
2023-03-09 15:36:09,315:INFO:Physical Core: 4
2023-03-09 15:36:09,316:INFO:Logical Core: 8
2023-03-09 15:36:09,316:INFO:Checking libraries
2023-03-09 15:36:09,316:INFO:System:
2023-03-09 15:36:09,316:INFO:    python: 3.10.9 | packaged by conda-forge | (main, Jan 11 2023, 15:15:40) [MSC v.1916 64 bit (AMD64)]
2023-03-09 15:36:09,316:INFO:executable: c:\Users\kevinp\.conda\envs\Anal_General\python.exe
2023-03-09 15:36:09,316:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-09 15:36:09,316:INFO:PyCaret required dependencies:
2023-03-09 15:36:09,316:INFO:                 pip: 23.0.1
2023-03-09 15:36:09,316:INFO:          setuptools: 65.6.3
2023-03-09 15:36:09,316:INFO:             pycaret: 3.0.0rc6
2023-03-09 15:36:09,316:INFO:             IPython: 8.6.0
2023-03-09 15:36:09,316:INFO:          ipywidgets: 7.7.2
2023-03-09 15:36:09,316:INFO:                tqdm: 4.64.1
2023-03-09 15:36:09,316:INFO:               numpy: 1.22.4
2023-03-09 15:36:09,316:INFO:              pandas: 1.5.2
2023-03-09 15:36:09,317:INFO:              jinja2: 3.0.3
2023-03-09 15:36:09,317:INFO:               scipy: 1.9.3
2023-03-09 15:36:09,317:INFO:              joblib: 1.2.0
2023-03-09 15:36:09,317:INFO:             sklearn: 1.1.3
2023-03-09 15:36:09,317:INFO:                pyod: 1.0.7
2023-03-09 15:36:09,317:INFO:            imblearn: 0.10.1
2023-03-09 15:36:09,317:INFO:   category_encoders: 2.5.1.post0
2023-03-09 15:36:09,317:INFO:            lightgbm: 3.3.3
2023-03-09 15:36:09,317:INFO:               numba: 0.56.4
2023-03-09 15:36:09,317:INFO:            requests: 2.28.1
2023-03-09 15:36:09,317:INFO:          matplotlib: 3.6.2
2023-03-09 15:36:09,317:INFO:          scikitplot: 0.3.7
2023-03-09 15:36:09,317:INFO:         yellowbrick: 1.5
2023-03-09 15:36:09,317:INFO:              plotly: 5.11.0
2023-03-09 15:36:09,317:INFO:             kaleido: 0.2.1
2023-03-09 15:36:09,317:INFO:         statsmodels: 0.13.5
2023-03-09 15:36:09,317:INFO:              sktime: 0.14.1
2023-03-09 15:36:09,318:INFO:               tbats: 1.1.2
2023-03-09 15:36:09,318:INFO:            pmdarima: 2.0.2
2023-03-09 15:36:09,318:INFO:              psutil: 5.9.4
2023-03-09 15:36:09,318:INFO:PyCaret optional dependencies:
2023-03-09 15:36:09,318:INFO:                shap: Not installed
2023-03-09 15:36:09,318:INFO:           interpret: Not installed
2023-03-09 15:36:09,318:INFO:                umap: Not installed
2023-03-09 15:36:09,318:INFO:    pandas_profiling: Not installed
2023-03-09 15:36:09,318:INFO:  explainerdashboard: Not installed
2023-03-09 15:36:09,318:INFO:             autoviz: Not installed
2023-03-09 15:36:09,318:INFO:           fairlearn: Not installed
2023-03-09 15:36:09,318:INFO:             xgboost: Not installed
2023-03-09 15:36:09,318:INFO:            catboost: Not installed
2023-03-09 15:36:09,318:INFO:              kmodes: Not installed
2023-03-09 15:36:09,318:INFO:             mlxtend: Not installed
2023-03-09 15:36:09,318:INFO:       statsforecast: Not installed
2023-03-09 15:36:09,318:INFO:        tune_sklearn: Not installed
2023-03-09 15:36:09,319:INFO:                 ray: Not installed
2023-03-09 15:36:09,319:INFO:            hyperopt: Not installed
2023-03-09 15:36:09,319:INFO:              optuna: Not installed
2023-03-09 15:36:09,319:INFO:               skopt: Not installed
2023-03-09 15:36:09,319:INFO:              mlflow: Not installed
2023-03-09 15:36:09,319:INFO:              gradio: 3.18.0
2023-03-09 15:36:09,319:INFO:             fastapi: 0.92.0
2023-03-09 15:36:09,319:INFO:             uvicorn: 0.20.0
2023-03-09 15:36:09,319:INFO:              m2cgen: Not installed
2023-03-09 15:36:09,319:INFO:           evidently: Not installed
2023-03-09 15:36:09,319:INFO:                nltk: 3.8.1
2023-03-09 15:36:09,319:INFO:            pyLDAvis: Not installed
2023-03-09 15:36:09,319:INFO:              gensim: Not installed
2023-03-09 15:36:09,319:INFO:               spacy: Not installed
2023-03-09 15:36:09,319:INFO:           wordcloud: 1.8.2.2
2023-03-09 15:36:09,319:INFO:            textblob: Not installed
2023-03-09 15:36:09,319:INFO:               fugue: Not installed
2023-03-09 15:36:09,319:INFO:           streamlit: Not installed
2023-03-09 15:36:09,319:INFO:             prophet: Not installed
2023-03-09 15:36:09,319:INFO:None
2023-03-09 15:36:09,319:INFO:Set up data.
2023-03-09 15:36:09,328:INFO:Set up index.
2023-03-09 15:36:09,328:INFO:Assigning column types.
2023-03-09 15:36:09,333:INFO:Preparing preprocessing pipeline...
2023-03-09 15:36:09,333:INFO:Set up simple imputation.
2023-03-09 15:36:09,333:INFO:Set up feature normalization.
2023-03-09 15:36:09,345:INFO:Finished creating preprocessing pipeline.
2023-03-09 15:36:09,349:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-03-09 15:36:09,349:INFO:Creating final display dataframe.
2023-03-09 15:36:09,362:INFO:Setup _display_container:                Description                 Value
0               Session id                   150
1      Original data shape            (26938, 6)
2   Transformed data shape            (26938, 6)
3          Ignore features                     3
4         Numeric features                     6
5               Preprocess                  True
6          Imputation type                simple
7       Numeric imputation                  mean
8   Categorical imputation                  mode
9                Normalize                  True
10        Normalize method                zscore
11                CPU Jobs                    -1
12                 Use GPU                 False
13          Log Experiment                 False
14         Experiment Name  cluster-default-name
15                     USI                  90fa
2023-03-09 15:36:09,371:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-09 15:36:09,371:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-09 15:36:09,371:INFO:setup() successfully completed in 0.07s...............
2023-03-09 15:39:34,088:INFO:gpu_param set to False
2023-03-09 15:39:34,088:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-09 15:39:34,089:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-09 15:42:25,075:INFO:Initializing plot_model()
2023-03-09 15:42:25,075:INFO:plot_model(plot=cluster, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=5, random_state=150), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, system=True)
2023-03-09 15:42:25,075:INFO:Checking exceptions
2023-03-09 15:42:25,079:INFO:Preloading libraries
2023-03-09 15:42:25,079:INFO:Copying training dataset
2023-03-09 15:42:25,079:INFO:Plot type: cluster
2023-03-09 15:42:25,080:INFO:SubProcess assign_model() called ==================================
2023-03-09 15:42:25,080:INFO:Initializing assign_model()
2023-03-09 15:42:25,080:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, model=KMeans(n_clusters=5, random_state=150), transformation=True, score=True, verbose=False)
2023-03-09 15:42:25,080:INFO:Checking exceptions
2023-03-09 15:42:25,080:INFO:Determining Trained Model
2023-03-09 15:42:25,080:INFO:Trained Model : K-Means Clustering
2023-03-09 15:42:25,080:INFO:Copying data
2023-03-09 15:42:25,093:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-03-09 15:42:25,105:INFO:(26938, 7)
2023-03-09 15:42:25,105:INFO:assign_model() successfully completed......................................
2023-03-09 15:42:25,106:INFO:SubProcess assign_model() end ==================================
2023-03-09 15:42:25,108:INFO:Fitting PCA()
2023-03-09 15:42:25,169:INFO:Sorting dataframe
2023-03-09 15:42:25,194:INFO:Rendering Visual
2023-03-09 15:42:26,628:INFO:Visual Rendered Successfully
2023-03-09 15:42:26,882:INFO:plot_model() successfully completed......................................
2023-03-09 15:43:09,694:INFO:Initializing plot_model()
2023-03-09 15:43:09,695:INFO:plot_model(plot=distance, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:43:09,695:INFO:Checking exceptions
2023-03-09 15:43:09,697:INFO:Preloading libraries
2023-03-09 15:43:09,698:INFO:Copying training dataset
2023-03-09 15:43:09,698:INFO:Plot type: distance
2023-03-09 15:43:09,731:INFO:Fitting Model
2023-03-09 15:43:09,731:WARNING:c:\Users\kevinp\.conda\envs\Anal_General\lib\site-packages\sklearn\base.py:450: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-03-09 15:43:09,917:INFO:Visual Rendered Successfully
2023-03-09 15:43:10,157:INFO:plot_model() successfully completed......................................
2023-03-09 15:43:12,503:INFO:Initializing plot_model()
2023-03-09 15:43:12,504:INFO:plot_model(plot=distribution, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:43:12,504:INFO:Checking exceptions
2023-03-09 15:43:12,505:INFO:Preloading libraries
2023-03-09 15:43:12,505:INFO:Copying training dataset
2023-03-09 15:43:12,505:INFO:Plot type: distribution
2023-03-09 15:43:12,505:INFO:SubProcess assign_model() called ==================================
2023-03-09 15:43:12,506:INFO:Initializing assign_model()
2023-03-09 15:43:12,506:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, model=KMeans(n_clusters=4, random_state=150), transformation=False, score=True, verbose=False)
2023-03-09 15:43:12,506:INFO:Checking exceptions
2023-03-09 15:43:12,506:INFO:Determining Trained Model
2023-03-09 15:43:12,506:INFO:Trained Model : K-Means Clustering
2023-03-09 15:43:12,506:INFO:Copying data
2023-03-09 15:43:12,517:INFO:(26938, 7)
2023-03-09 15:43:12,518:INFO:assign_model() successfully completed......................................
2023-03-09 15:43:12,518:INFO:SubProcess assign_model() end ==================================
2023-03-09 15:43:12,518:INFO:Sorting dataframe
2023-03-09 15:43:12,542:INFO:Rendering Visual
2023-03-09 15:43:13,029:INFO:Visual Rendered Successfully
2023-03-09 15:43:13,257:INFO:plot_model() successfully completed......................................
2023-03-09 15:43:20,692:INFO:Initializing plot_model()
2023-03-09 15:43:20,692:INFO:plot_model(plot=distance, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:43:20,692:INFO:Checking exceptions
2023-03-09 15:43:20,694:INFO:Preloading libraries
2023-03-09 15:43:20,695:INFO:Copying training dataset
2023-03-09 15:43:20,695:INFO:Plot type: distance
2023-03-09 15:43:20,725:INFO:Fitting Model
2023-03-09 15:43:20,725:WARNING:c:\Users\kevinp\.conda\envs\Anal_General\lib\site-packages\sklearn\base.py:450: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-03-09 15:43:20,882:INFO:Visual Rendered Successfully
2023-03-09 15:43:21,115:INFO:plot_model() successfully completed......................................
2023-03-09 15:43:21,183:INFO:Initializing plot_model()
2023-03-09 15:43:21,183:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:43:21,184:INFO:Checking exceptions
2023-03-09 15:43:21,185:INFO:Preloading libraries
2023-03-09 15:43:21,185:INFO:Copying training dataset
2023-03-09 15:43:21,185:INFO:Plot type: silhouette
2023-03-09 15:43:21,196:INFO:Fitting Model
2023-03-09 15:43:21,197:WARNING:c:\Users\kevinp\.conda\envs\Anal_General\lib\site-packages\sklearn\base.py:450: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-03-09 15:43:42,033:INFO:Visual Rendered Successfully
2023-03-09 15:43:42,300:INFO:plot_model() successfully completed......................................
2023-03-09 15:43:42,324:INFO:Initializing plot_model()
2023-03-09 15:43:42,324:INFO:plot_model(plot=pipeline, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:43:42,324:INFO:Checking exceptions
2023-03-09 15:43:42,326:INFO:Preloading libraries
2023-03-09 15:43:42,327:INFO:Copying training dataset
2023-03-09 15:43:42,327:INFO:Plot type: pipeline
2023-03-09 15:43:42,404:INFO:Visual Rendered Successfully
2023-03-09 15:43:42,648:INFO:plot_model() successfully completed......................................
2023-03-09 15:46:55,010:INFO:Initializing plot_model()
2023-03-09 15:46:55,010:INFO:plot_model(plot=tsne, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=5, random_state=150), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, system=True)
2023-03-09 15:46:55,010:INFO:Checking exceptions
2023-03-09 15:46:55,015:INFO:Preloading libraries
2023-03-09 15:46:55,016:INFO:Copying training dataset
2023-03-09 15:46:55,016:INFO:Plot type: tsne
2023-03-09 15:46:55,017:INFO:SubProcess assign_model() called ==================================
2023-03-09 15:46:55,017:INFO:Initializing assign_model()
2023-03-09 15:46:55,018:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, model=KMeans(n_clusters=5, random_state=150), transformation=True, score=False, verbose=False)
2023-03-09 15:46:55,018:INFO:Checking exceptions
2023-03-09 15:46:55,018:INFO:Determining Trained Model
2023-03-09 15:46:55,018:INFO:Trained Model : K-Means Clustering
2023-03-09 15:46:55,018:INFO:Copying data
2023-03-09 15:46:55,031:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-03-09 15:46:55,043:INFO:(26938, 7)
2023-03-09 15:46:55,043:INFO:assign_model() successfully completed......................................
2023-03-09 15:46:55,043:INFO:SubProcess assign_model() end ==================================
2023-03-09 15:46:55,044:INFO:Fitting TSNE()
2023-03-09 15:46:55,044:WARNING:c:\Users\kevinp\.conda\envs\Anal_General\lib\site-packages\sklearn\manifold\_t_sne.py:800: FutureWarning:

The default initialization in TSNE will change from 'random' to 'pca' in 1.2.


2023-03-09 15:46:55,044:WARNING:c:\Users\kevinp\.conda\envs\Anal_General\lib\site-packages\sklearn\manifold\_t_sne.py:810: FutureWarning:

The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.


2023-03-09 15:51:56,144:INFO:Sorting dataframe
2023-03-09 15:51:56,180:INFO:Rendering Visual
2023-03-09 15:51:56,425:INFO:Visual Rendered Successfully
2023-03-09 15:51:56,720:INFO:plot_model() successfully completed......................................
2023-03-09 15:51:56,736:INFO:Initializing plot_model()
2023-03-09 15:51:56,737:INFO:plot_model(plot=cluster, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:51:56,737:INFO:Checking exceptions
2023-03-09 15:51:56,738:INFO:Preloading libraries
2023-03-09 15:51:56,738:INFO:Copying training dataset
2023-03-09 15:51:56,738:INFO:Plot type: cluster
2023-03-09 15:51:56,738:INFO:SubProcess assign_model() called ==================================
2023-03-09 15:51:56,739:INFO:Initializing assign_model()
2023-03-09 15:51:56,739:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, model=KMeans(n_clusters=4, random_state=150), transformation=True, score=True, verbose=False)
2023-03-09 15:51:56,739:INFO:Checking exceptions
2023-03-09 15:51:56,739:INFO:Determining Trained Model
2023-03-09 15:51:56,739:INFO:Trained Model : K-Means Clustering
2023-03-09 15:51:56,739:INFO:Copying data
2023-03-09 15:51:56,752:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-03-09 15:51:56,770:INFO:(26938, 7)
2023-03-09 15:51:56,770:INFO:assign_model() successfully completed......................................
2023-03-09 15:51:56,771:INFO:SubProcess assign_model() end ==================================
2023-03-09 15:51:56,774:INFO:Fitting PCA()
2023-03-09 15:51:56,796:INFO:Sorting dataframe
2023-03-09 15:51:56,824:INFO:Rendering Visual
2023-03-09 15:51:56,988:INFO:Visual Rendered Successfully
2023-03-09 15:51:57,250:INFO:plot_model() successfully completed......................................
2023-03-09 15:51:59,125:INFO:Initializing plot_model()
2023-03-09 15:51:59,126:INFO:plot_model(plot=pipeline, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=150), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x000001514888E500>, system=True)
2023-03-09 15:51:59,126:INFO:Checking exceptions
2023-03-09 15:51:59,127:INFO:Preloading libraries
2023-03-09 15:51:59,127:INFO:Copying training dataset
2023-03-09 15:51:59,127:INFO:Plot type: pipeline
2023-03-09 15:51:59,252:INFO:Visual Rendered Successfully
2023-03-09 15:51:59,541:INFO:plot_model() successfully completed......................................
2023-03-09 16:24:55,313:INFO:Initializing create_model()
2023-03-09 16:24:55,313:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, estimator=kmeans, num_clusters=5, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-03-09 16:24:55,314:INFO:Checking exceptions
2023-03-09 16:24:55,383:INFO:Importing untrained model
2023-03-09 16:24:55,390:INFO:K-Means Clustering Imported successfully
2023-03-09 16:24:55,404:INFO:Fitting Model
2023-03-09 16:25:06,908:INFO:KMeans(n_clusters=5, random_state=150)
2023-03-09 16:25:06,909:INFO:create_models() successfully completed......................................
2023-03-09 16:25:06,915:INFO:Uploading results into container
2023-03-09 16:25:06,918:INFO:Uploading model into container now
2023-03-09 16:25:06,929:INFO:_master_model_container: 1
2023-03-09 16:25:06,929:INFO:_display_container: 2
2023-03-09 16:25:06,929:INFO:KMeans(n_clusters=5, random_state=150)
2023-03-09 16:25:06,929:INFO:create_model() successfully completed......................................
2023-03-09 16:25:44,221:INFO:Initializing save_model()
2023-03-09 16:25:44,221:INFO:save_model(model=KMeans(n_clusters=5, random_state=150), model_name=Saved_Kmeans_Model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2023-03-09 16:25:44,222:INFO:Adding model into prep_pipe
2023-03-09 16:25:44,228:INFO:Saved_Kmeans_Model.pkl saved in current working directory
2023-03-09 16:25:44,236:INFO:Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=5, random_state=150))])
2023-03-09 16:25:44,236:INFO:save_model() successfully completed......................................
2023-03-09 16:27:09,838:INFO:Initializing assign_model()
2023-03-09 16:27:09,838:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, model=KMeans(n_clusters=5, random_state=150), transformation=False, score=True, verbose=True)
2023-03-09 16:27:09,839:INFO:Checking exceptions
2023-03-09 16:27:09,839:INFO:Determining Trained Model
2023-03-09 16:27:09,839:INFO:Trained Model : K-Means Clustering
2023-03-09 16:27:09,839:INFO:Copying data
2023-03-09 16:27:09,857:INFO:(26938, 7)
2023-03-09 16:27:09,857:INFO:assign_model() successfully completed......................................
2023-03-09 16:27:19,192:INFO:Initializing save_model()
2023-03-09 16:27:19,192:INFO:save_model(model=KMeans(n_clusters=5, random_state=150), model_name=Saved_Kmeans_Model, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2023-03-09 16:27:19,192:INFO:Adding model into prep_pipe
2023-03-09 16:27:19,199:INFO:Saved_Kmeans_Model.pkl saved in current working directory
2023-03-09 16:27:19,208:INFO:Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=5, random_state=150))])
2023-03-09 16:27:19,208:INFO:save_model() successfully completed......................................
2023-03-09 16:31:47,310:INFO:Initializing load_model()
2023-03-09 16:31:47,311:INFO:load_model(model_name=C:\Users\kevinp\OneDrive - MARCO Marketing\Marco MKT\IA\Cluster Kmeans\Datos\Saved_Kmeans_Model, platform=None, authentication=None, verbose=True)
2023-03-09 16:31:58,918:INFO:Initializing predict_model()
2023-03-09 16:31:58,918:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, estimator=Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=5, random_state=150))]), ml_usecase=None)
2023-03-09 16:31:58,919:INFO:Set up data.
2023-03-10 20:26:52,832:INFO:Initializing predict_model()
2023-03-10 20:26:52,836:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, estimator=Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=5, random_state=150))]), ml_usecase=None)
2023-03-10 20:26:52,837:INFO:Set up data.
2023-03-10 20:30:35,975:INFO:Initializing predict_model()
2023-03-10 20:30:35,975:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, estimator=Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=5, random_state=150))]), ml_usecase=None)
2023-03-10 20:30:35,976:INFO:Set up data.
2023-03-10 20:37:16,006:INFO:Initializing predict_model()
2023-03-10 20:37:16,007:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000151453BB3A0>, estimator=Pipeline(memory=Memory(location=C:\Users\kevinp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Cantidad_Total_Productos',
                                             'Compra_Total', 'Cantidad_Compras',
                                             'Total_Subcategorias_Compradas',
                                             'Q_Productos_Compra',
                                             'Ticket_Compra'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=5, random_state=150))]), ml_usecase=None)
2023-03-10 20:37:16,007:INFO:Set up data.
2023-03-10 20:45:44,995:WARNING:C:\Users\kevinp\AppData\Local\Temp\ipykernel_24128\212950550.py:1: FutureWarning:

The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.


2023-03-10 20:48:19,178:WARNING:C:\Users\kevinp\AppData\Local\Temp\ipykernel_24128\1132504379.py:1: FutureWarning:

The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.


2023-03-10 20:48:30,975:WARNING:C:\Users\kevinp\AppData\Local\Temp\ipykernel_24128\2589485671.py:1: FutureWarning:

The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.


2023-03-10 20:48:30,983:WARNING:C:\Users\kevinp\AppData\Local\Temp\ipykernel_24128\2589485671.py:2: FutureWarning:

The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.


